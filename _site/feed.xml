<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-07-02T00:17:29+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Darren’s Blog</title><subtitle>Really cool blog about ... something</subtitle><author><name>Darren Ou</name></author><entry><title type="html">SYS BOX Privacy Policy</title><link href="http://localhost:4000/SYS-BOX-Privacy-Policy-En/" rel="alternate" type="text/html" title="SYS BOX Privacy Policy" /><published>2019-07-01T00:00:00+08:00</published><updated>2019-07-01T00:00:00+08:00</updated><id>http://localhost:4000/SYS-BOX-Privacy-Policy-En</id><content type="html" xml:base="http://localhost:4000/SYS-BOX-Privacy-Policy-En/">&lt;p&gt;The software respects and protects the personal privacy of all service users. The software will treat such information with a high degree of diligence and due diligence. The software will not disclose or provide such information to third parties. This software will update this privacy policy from time to time. By agreeing to this software service usage agreement, you shall be deemed to have agreed to the entire content of this privacy policy. This privacy policy is an integral part of the software service usage agreement.&lt;/p&gt;

&lt;h2 id=&quot;1-scope-of-application&quot;&gt;1. Scope of application&lt;/h2&gt;
&lt;p&gt;a) When you use the software, the software will automatically read the information on your phone, including but not limited to the language, region, software and hardware characteristic information and other data you use.&lt;/p&gt;

&lt;p&gt;b) For better user experience, when the software crashes, the stack information will be uploaded to the crash log analysis platform, and user privacy information will never be uploaded.&lt;/p&gt;

&lt;h2 id=&quot;2-use-of-information&quot;&gt;2. Use of information&lt;/h2&gt;
&lt;p&gt;a) When you use the software, the traffic package information and application shortcut entrance you recorded will only be recorded locally, and will not be uploaded to the server;&lt;/p&gt;

&lt;p&gt;b) When the software crashes, the stack information will be uploaded to the crash log analysis platform to improve the software in time to improve the user experience.&lt;/p&gt;

&lt;h2 id=&quot;3-information-disclosure&quot;&gt;3. Information disclosure&lt;/h2&gt;
&lt;p&gt;The software will not disclose your information to an untrusted third party.&lt;/p&gt;</content><author><name>Darren Ou</name></author><summary type="html">The software respects and protects the personal privacy of all service users. The software will treat such information with a high degree of diligence and due diligence. The software will not disclose or provide such information to third parties. This software will update this privacy policy from time to time. By agreeing to this software service usage agreement, you shall be deemed to have agreed to the entire content of this privacy policy. This privacy policy is an integral part of the software service usage agreement.</summary></entry><entry><title type="html">SYS BOX 隐私政策</title><link href="http://localhost:4000/SYS-BOX-Privacy-Policy/" rel="alternate" type="text/html" title="SYS BOX 隐私政策" /><published>2019-07-01T00:00:00+08:00</published><updated>2019-07-01T00:00:00+08:00</updated><id>http://localhost:4000/SYS-BOX-Privacy-Policy</id><content type="html" xml:base="http://localhost:4000/SYS-BOX-Privacy-Policy/">&lt;p&gt;本软件尊重并保护所有使用服务用户的个人隐私权。本软件将以高度的勤勉、审慎义务对待这些信息。本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。&lt;/p&gt;

&lt;h2 id=&quot;一适用范围&quot;&gt;一、适用范围&lt;/h2&gt;
&lt;p&gt;1.在您使用本软件时，本软件会自动读取您的手机上的信息，包括但不限于您使用的语言、地区、软硬件特征信息等数据，所有信息均只用于展示而不会上传到服务器；&lt;/p&gt;

&lt;p&gt;2.为了更好的用户体验，当本软件发生崩溃时，会把崩溃时堆栈信息上传到崩溃日志分析平台，绝不会上传用户隐私信息。&lt;/p&gt;

&lt;h2 id=&quot;二信息的使用&quot;&gt;二、信息的使用&lt;/h2&gt;
&lt;p&gt;1.在您使用本软件时，您所记录的流量套餐信息、应用快捷入口等均只会记录在本地，不会上传到服务器；&lt;/p&gt;

&lt;p&gt;2.当软件发生崩溃时，会把崩溃时堆栈信息上传到崩溃日志分析平台，以便能及时改进软件提升用户体验。&lt;/p&gt;

&lt;h2 id=&quot;三信息披露&quot;&gt;三、信息披露&lt;/h2&gt;
&lt;p&gt;本软件不会将您的信息披露给不受信任的第三方。&lt;/p&gt;</content><author><name>Darren Ou</name></author><summary type="html">本软件尊重并保护所有使用服务用户的个人隐私权。本软件将以高度的勤勉、审慎义务对待这些信息。本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。</summary></entry><entry><title type="html">关于iOS多任务页面底部出现“xxx，早上好”banner的调研</title><link href="http://localhost:4000/iOS-Banners/" rel="alternate" type="text/html" title="关于iOS多任务页面底部出现“xxx，早上好”banner的调研" /><published>2018-11-12T00:00:00+08:00</published><updated>2018-11-12T00:00:00+08:00</updated><id>http://localhost:4000/iOS-Banners</id><content type="html" xml:base="http://localhost:4000/iOS-Banners/">&lt;h3 id=&quot;多任务页面底部banner出现的种类&quot;&gt;多任务页面底部banner出现的种类&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/media/image/ios_bottom_banners_1.png&quot; alt=&quot;Image_1&quot; /&gt;
&lt;strong&gt;&lt;em&gt;1、handoff（接力）
2、xxx，早上好
3、基于您的当前位置
4、“耳机”已连接
5、（未知。。。）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;实现&quot;&gt;实现&lt;/h3&gt;

&lt;h4 id=&quot;handoff&quot;&gt;handoff&lt;/h4&gt;
&lt;p&gt;设置 -&amp;gt; 通用 -&amp;gt; 接力 -&amp;gt; 打开接力&lt;/p&gt;

&lt;p&gt;通过“接力”功能，您在某设备开始操作后，可立即使用iCloud账号从另一设备继续相同操作。您需要的应用会显示在应用切换器和Mac的程序坞上。&lt;/p&gt;

&lt;p&gt;这种一般应用在需要跨设备共享编辑的应用上，例如“印象笔记”，在手机上编辑了一段文字后，可以切换到Mac上继续编辑。&lt;strong&gt;Bigo Live应该没有这种需求&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;官方简介：https://support.apple.com/zh-cn/HT204681&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;这是开发者唯一能控制的底部banner种类&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;siri应用建议&quot;&gt;Siri应用建议&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;xxx，早上好
基于您的当前位置
“耳机”已连接&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&quot;关于前两种情况&quot;&gt;关于前两种情况：&lt;/h5&gt;
&lt;p&gt;系统会记录用户长期的使用应用的习惯，自主地向用户推荐相关的应用。例如，早上起床后我会习惯打开微博，系统早上就会给我推荐微博；来到公司我会习惯打开微信，系统也会根据地理位置给我推荐微信。系统会通过记录用户的使用频率、时间、地理位置等维度，向用户推荐应用。&lt;/p&gt;

&lt;h5 id=&quot;关于耳机已连接&quot;&gt;关于“耳机”已连接&lt;/h5&gt;
&lt;p&gt;手机连接蓝牙耳机或者有线耳机后，系统会弹出 “耳机”已连接 的banner，如果手机装有多个音乐应用，目前观察到的情况是会弹出最常用的那个应用。但是有时候又不会弹，而且弹出维持的时间也没有规律。&lt;/p&gt;

&lt;h5 id=&quot;国外用户如是说&quot;&gt;国外用户如是说：&lt;/h5&gt;
&lt;hr /&gt;
&lt;p&gt;This is a feature suggesting which app you normally use in a certain situation. Like location, time of day, headphones or Bluetooth connected. Phone tries to learn if you always do something. Like I always open maps when I connect to my car Bluetooth. Or always open music when by headphones are plugged in. Or always open weather at 7am.
***&lt;/p&gt;

&lt;h5 id=&quot;用户怎么打开应用推荐&quot;&gt;用户怎么打开应用推荐&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/media/image/ios_bottom_banners_2.png&quot; alt=&quot;Image_1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1、设置 -&amp;gt; Siri与搜索 -&amp;gt; 打开 搜索建议 查询建议 锁屏建议
2、设置 -&amp;gt; 隐私 -&amp;gt; 定位服务 -&amp;gt; 系统服务 -&amp;gt; 打开 基于位置的建议 基于位置的提醒
3、通知栏 -&amp;gt; 右滑 -&amp;gt; 编辑 -&amp;gt; 添加 Siri应用建议 小组件&lt;/p&gt;

&lt;h3 id=&quot;结论&quot;&gt;结论&lt;/h3&gt;
&lt;p&gt;iOS多任务页面底部出现“xxx，早上好”banner是一个系统行为，系统的Siri会根据用户的使用习惯，在多任务页面底部显示推荐应用，开发者无法干预。&lt;/p&gt;

&lt;h3 id=&quot;参考&quot;&gt;参考&lt;/h3&gt;
&lt;p&gt;https://stackoverflow.com/questions/46039851/how-may-i-customize-app-suggestions-in-ios
https://www.phonearena.com/news/App-suggestions-in-iOS-10-how-they-work-whats-changed-how-to-disable-them_id89219
https://discussions.apple.com/message/30065692#30065692&lt;/p&gt;</content><author><name>Darren Ou</name></author><summary type="html">多任务页面底部banner出现的种类 1、handoff（接力） 2、xxx，早上好 3、基于您的当前位置 4、“耳机”已连接 5、（未知。。。）</summary></entry><entry><title type="html">iOS利用Speech Kit实现语音识别</title><link href="http://localhost:4000/Speech-Kit/" rel="alternate" type="text/html" title="iOS利用Speech Kit实现语音识别" /><published>2017-12-10T00:00:00+08:00</published><updated>2017-12-10T00:00:00+08:00</updated><id>http://localhost:4000/Speech-Kit</id><content type="html" xml:base="http://localhost:4000/Speech-Kit/">&lt;p&gt;&lt;img src=&quot;/media/image/speech_kit_1.jpg&quot; alt=&quot;Siri.jpeg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;一前言&quot;&gt;一、前言&lt;/h2&gt;

&lt;p&gt;前一段时间彩云小译上了App Store的推荐，我下载试玩了一下，效果还是非常不错的。它可以实现实时翻译的功能，我自己粗浅地分析了一下彩云小译的实现原理，其中最重要的一步就是声音转文字。&lt;/p&gt;

&lt;p&gt;目前市面上也有很多服务商提供声音转文字的服务，有收费的有免费的，但是毕竟是第三方的服务商，接口的性能和稳定性都不一定能保证。&lt;/p&gt;

&lt;p&gt;2016年Apple在发布重磅产品iOS10的同时也发布了Speech Kit语音识别框架，大名鼎鼎的Siri的语音识别就是基于Speech Kit实现的。有了Speech Kit，我们就可以非常简单地实现声音转文字的功能。下面我就简单介绍一下Speech Kit的用法。&lt;/p&gt;

&lt;h2 id=&quot;二实现&quot;&gt;二、实现&lt;/h2&gt;

&lt;h3 id=&quot;1页面布局&quot;&gt;1、页面布局&lt;/h3&gt;

&lt;p&gt;因为只是实现一个Demo，页面不需要多复杂，只需要在Storyboard上拖入两个控件：一个UITextView用于展示声音转文字的结果，一个UIButton用于触发语音识别，最好布置好约束即可。具体效果如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/image/speech_kit_2.jpg&quot; alt=&quot;控件布局&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2申请用户权限&quot;&gt;2、申请用户权限&lt;/h3&gt;

&lt;p&gt;首先需要引入Speech Kit框架&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#import &amp;lt;Speech/Speech.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;申请权限非常简单，在识别前（viewDidLoad:）加入以下代码即可申请语音识别的权限：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)viewDidLoad {
    [super viewDidLoad];
    
    // 请求权限
    [SFSpeechRecognizer requestAuthorization:^(SFSpeechRecognizerAuthorizationStatus status) {
        NSLog(@&quot;status %@&quot;, status == SFSpeechRecognizerAuthorizationStatusAuthorized ? @&quot;授权成功&quot; : @&quot;授权失败&quot;);
    }];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这时候运行起来会崩溃，原因是在iOS10后需要在info.plist文件中添加麦克分和语音识别权限申请信息：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;key&amp;gt;NSSpeechRecognitionUsageDescription&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;请允许语音识别&amp;lt;/string&amp;gt;
&amp;lt;key&amp;gt;NSMicrophoneUsageDescription&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;请打开麦克风&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行项目，会提示打开语音识别和打开麦克风权限，至此我们已经完成了权限的申请。&lt;/p&gt;

&lt;h3 id=&quot;3初始化语音识别引擎&quot;&gt;3、初始化语音识别引擎&lt;/h3&gt;

&lt;p&gt;添加以下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)initEngine {
    if (!self.speechRecognizer) {
        // 设置语言
        NSLocale *locale = [NSLocale localeWithLocaleIdentifier:@&quot;zh-CN&quot;];
        self.speechRecognizer = [[SFSpeechRecognizer alloc] initWithLocale:locale];
    }
    if (!self.audioEngine) {
        self.audioEngine = [[AVAudioEngine alloc] init];
    }
    
    AVAudioSession *audioSession = [AVAudioSession sharedInstance];
    [audioSession setCategory:AVAudioSessionCategoryRecord mode:AVAudioSessionModeMeasurement options:AVAudioSessionCategoryOptionDuckOthers error:nil];
    [audioSession setActive:YES withOptions:AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation error:nil];
    
    if (self.recognitionRequest) {
        [self.recognitionRequest endAudio];
        self.recognitionRequest = nil;
    }
    self.recognitionRequest = [[SFSpeechAudioBufferRecognitionRequest alloc] init];
    self.recognitionRequest.shouldReportPartialResults = YES; 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;初始化&lt;code class=&quot;highlighter-rouge&quot;&gt;SFSpeechRecognizer&lt;/code&gt;时需要传入一个&lt;code class=&quot;highlighter-rouge&quot;&gt;NSLocle&lt;/code&gt;对象，用于标识用户输入的语种，如”zh-CN”代表普通话，”en_US”代表英文。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AVAudioEngine&lt;/code&gt;是音频引擎，用于音频输入。&lt;/li&gt;
  &lt;li&gt;利用&lt;code class=&quot;highlighter-rouge&quot;&gt;AVAudioSession&lt;/code&gt;对象进行音频录制的配置。&lt;/li&gt;
  &lt;li&gt;在语音识别产生最终结果之前可能产生多种结果，设置&lt;code class=&quot;highlighter-rouge&quot;&gt;SFSpeechAudioBufferRecognitionRequest&lt;/code&gt;对象的&lt;code class=&quot;highlighter-rouge&quot;&gt;shouldReportPartialResult&lt;/code&gt;属性为YES意味着每产生一种结果就马上返回。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;4启动语音识别引擎&quot;&gt;4、启动语音识别引擎&lt;/h3&gt;

&lt;p&gt;添加以下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)startRecording:(UIButton *)recordButton {
    [self initEngine];
    
    AVAudioFormat *recordingFormat = [[self.audioEngine inputNode] outputFormatForBus:0];
    [[self.audioEngine inputNode] installTapOnBus:0 bufferSize:1024 format:recordingFormat block:^(AVAudioPCMBuffer * _Nonnull buffer, AVAudioTime * _Nonnull when) {
        [self.recognitionRequest appendAudioPCMBuffer:buffer];
    }];
    [self.audioEngine prepare];
    [self.audioEngine startAndReturnError:nil];
    
    [recordButton setTitle:@&quot;录音ing&quot; forState:UIControlStateNormal];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;self.recordButton&lt;/code&gt;添加点击事件。&lt;/li&gt;
  &lt;li&gt;设置音频录制的格式及音频流回调的处理(把音频流拼接到&lt;code class=&quot;highlighter-rouge&quot;&gt;self.recognitionRequest&lt;/code&gt;)。&lt;/li&gt;
  &lt;li&gt;开始录制音频。&lt;/li&gt;
  &lt;li&gt;修改按钮文案。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;5重置语音识别引擎&quot;&gt;5、重置语音识别引擎&lt;/h3&gt;

&lt;p&gt;添加以下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)stopRecording:(UIButton *)recordButton {
    [[self.audioEngine inputNode] removeTapOnBus:0];
    [self.audioEngine stop];
    
    [self.recognitionRequest endAudio];
    self.recognitionRequest = nil;
    
    [recordButton setTitle:@&quot;录音&quot; forState:UIControlStateNormal];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;self.recordButton&lt;/code&gt;添加点击事件。&lt;/li&gt;
  &lt;li&gt;停止音频录制引擎。&lt;/li&gt;
  &lt;li&gt;停止识别器。&lt;/li&gt;
  &lt;li&gt;修改按钮文案。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;6语音识别结果的回调&quot;&gt;6、语音识别结果的回调&lt;/h3&gt;

&lt;p&gt;下面是语音识别器&lt;code class=&quot;highlighter-rouge&quot;&gt;SFSpeechRecognizer&lt;/code&gt;的API描述：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Recognize speech utterance with a request
// If request.shouldReportPartialResults is true, result handler will be called
// repeatedly with partial results, then finally with a final result or an error.
- (SFSpeechRecognitionTask *)recognitionTaskWithRequest:(SFSpeechRecognitionRequest *)request
                                          resultHandler:(void (^)(SFSpeechRecognitionResult * __nullable result, NSError * __nullable error))resultHandler;

// Advanced API: Recognize a custom request with with a delegate
// The delegate will be weakly referenced by the returned task
- (SFSpeechRecognitionTask *)recognitionTaskWithRequest:(SFSpeechRecognitionRequest *)request
                                               delegate:(id &amp;lt;SFSpeechRecognitionTaskDelegate&amp;gt;)delegate;                                           
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;语音识别结果的回调有两种方式，一种是delegate，一种是block，这里为了简单，先采用block的方式回调。&lt;/p&gt;

&lt;p&gt;初始化语音识别器&lt;code class=&quot;highlighter-rouge&quot;&gt;SFSpeechRecognizer&lt;/code&gt;时添加以下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[self.speechRecognizer recognitionTaskWithRequest:self.recognitionRequest resultHandler:^(SFSpeechRecognitionResult * _Nullable result, NSError * _Nullable error) {
        NSLog(@&quot;is final: %d  result: %@&quot;, result.isFinal, result.bestTranscription.formattedString);
        if (result.isFinal) {
            self.textView.text = [NSString stringWithFormat:@&quot;%@%@&quot;, self.textView.text, result.bestTranscription.formattedString];
        }
    }];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;7识别音频文件&quot;&gt;7、识别音频文件&lt;/h3&gt;

&lt;p&gt;添加以下代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (IBAction)startRecognizing:(id)sender {
    SFSpeechRecognizer *recognizer = [[SFSpeechRecognizer alloc] initWithLocale:[NSLocale localeWithLocaleIdentifier:@&quot;zh_CN&quot;]];
    NSURL *url = [[NSBundle mainBundle] URLForResource:@&quot;test.mp3&quot; withExtension:nil];
    SFSpeechURLRecognitionRequest *request = [[SFSpeechURLRecognitionRequest alloc] initWithURL:url];
    [recognizer recognitionTaskWithRequest:request resultHandler:^(SFSpeechRecognitionResult * _Nullable result, NSError * _Nullable error) {
        if (result.isFinal) {
            UIAlertController *alert = [UIAlertController alertControllerWithTitle:@&quot;识别结果&quot; message:[NSString stringWithFormat:@&quot;%@&quot;, result.bestTranscription.formattedString] preferredStyle:UIAlertControllerStyleAlert];
            UIAlertAction *confirm = [UIAlertAction actionWithTitle:@&quot;OK&quot; style:UIAlertActionStyleCancel handler:nil];
            [alert addAction:confirm];
            [self presentViewController:alert animated:YES completion:nil];
        }
    }];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;初始化语音识别器&lt;code class=&quot;highlighter-rouge&quot;&gt;SFSpeechRecognizer&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;获取音频文件路径。&lt;/li&gt;
  &lt;li&gt;初始化语音识别请求&lt;code class=&quot;highlighter-rouge&quot;&gt;SFSpeechURLRecognitionRequest&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;设置回调。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;三总结&quot;&gt;三、总结&lt;/h2&gt;
&lt;p&gt;本文章主要介绍了如何利用iOS系统自带的Speech Kit框架实现音频转文字的功能，Speech Kit相当强大，本文章只是非常简单的介绍了录音识别及音频文件识别而已，大家有兴趣可以深入研究，有问题也可以一起探讨。&lt;/p&gt;

&lt;p&gt;声音转文字的功能我们已经实现了，下一步我们可以找到翻译服务提供商的服务，就可以实现一个简易版的实时翻译应用了。&lt;/p&gt;

&lt;p&gt;本文Demo：&lt;a href=&quot;https://github.com/OuDuShu/SpeechTest&quot;&gt;https://github.com/OuDuShu/SpeechTest&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;四参考&quot;&gt;四、参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://swift.gg/2016/09/30/siri-speech-framework/&quot;&gt;http://swift.gg/2016/09/30/siri-speech-framework/&lt;/a&gt;
&lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2016/509/&quot;&gt;https://developer.apple.com/videos/play/wwdc2016/509/&lt;/a&gt;
&lt;a href=&quot;https://developer.nuance.com/public/Help/DragonMobileSDKReference_iOS/Getting-started.html&quot;&gt;https://developer.nuance.com/public/Help/DragonMobileSDKReference_iOS/Getting-started.html&lt;/a&gt;
&lt;a href=&quot;https://www.raywenderlich.com/60870/building-ios-app-like-siri&quot;&gt;https://www.raywenderlich.com/60870/building-ios-app-like-siri&lt;/a&gt;&lt;/p&gt;</content><author><name>Darren Ou</name></author><summary type="html"></summary></entry></feed>